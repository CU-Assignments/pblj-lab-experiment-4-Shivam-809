import java.util.*;

class TicketBookingSystem {
    private final boolean[] seats;
    
    public TicketBookingSystem(int totalSeats) {
        seats = new boolean[totalSeats];
    }
    
    public synchronized boolean bookSeat(int seatNumber, String user) {
        if (seatNumber < 1 || seatNumber > seats.length) {
            System.out.println(user + " selected an invalid seat number.");
            return false;
        }
        if (!seats[seatNumber - 1]) {
            seats[seatNumber - 1] = true;
            System.out.println(user + " successfully booked seat " + seatNumber);
            return true;
        } else {
            System.out.println(user + " attempted to book an already reserved seat " + seatNumber);
            return false;
        }
    }
}

class UserThread extends Thread {
    private final TicketBookingSystem system;
    private final String user;
    private final int seatNumber;
    
    public UserThread(TicketBookingSystem system, String user, int seatNumber, int priority) {
        this.system = system;
        this.user = user;
        this.seatNumber = seatNumber;
        this.setPriority(priority);
    }
    
    @Override
    public void run() {
        system.bookSeat(seatNumber, user);
    }
}

public class Main2 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter total number of seats: ");
        int totalSeats = scanner.nextInt();
        TicketBookingSystem system = new TicketBookingSystem(totalSeats);
        
        List<UserThread> users = new ArrayList<>();
        
        System.out.print("Enter number of users: ");
        int numUsers = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        
        for (int i = 0; i < numUsers; i++) {
            System.out.print("Enter user name: ");
            String userName = scanner.nextLine();
            
            System.out.print("Enter seat number to book: ");
            int seatNumber = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            
            System.out.print("Is the user VIP? (yes/no): ");
            String vipStatus = scanner.nextLine();
            int priority = vipStatus.equalsIgnoreCase("yes") ? Thread.MAX_PRIORITY : Thread.NORM_PRIORITY;
            
            users.add(new UserThread(system, userName, seatNumber, priority));
        }
        
        Collections.shuffle(users); // Simulating concurrent behavior
        
        for (UserThread user : users) {
            user.start();
        }
        
        for (UserThread user : users) {
            try {
                user.join();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        
        System.out.println("All bookings processed.");
        scanner.close();
    }
}
